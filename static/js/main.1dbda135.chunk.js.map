{"version":3,"sources":["Main/theme.js","Components/Containers/Sidebar/reducers.js","Components/Containers/States/reducers.js","Components/Containers/Inputs/reducers.js","Components/Containers/Table/reducers.js","Components/Containers/Execution/reducers.js","Components/Containers/Start/reducers.js","Main/reducers.js","Components/Common/If.jsx","Components/AppBar.jsx","Components/Containers/Sidebar/actions.js","Components/Graphs.jsx","Components/Common/SidebarBox.jsx","Components/Containers/Inputs/index.jsx","Components/Containers/Inputs/actions.js","Components/Containers/States/index.jsx","Components/Containers/States/actions.js","Components/Containers/Table/index.jsx","Components/Containers/Table/actions.js","Components/Containers/Execution/index.jsx","Components/Containers/Execution/actions.js","Components/Containers/Start/actions.js","Components/Containers/Start/index.jsx","Components/Containers/Sidebar/index.jsx","Main/Index.jsx","serviceWorker.js","index.js"],"names":["global","colors","brand","focus","font","family","size","height","INITIAL_STATE","open","list","items","submitting","initialState","undefined","beforeState","currentState","lastInput","rootReducer","combineReducers","sidebar","state","action","type","payload","includes","input","table","invalidTableItem","find","item","existStateAndInput","s1","i","s2","Boolean","execution","filter","index","start","test","children","notTest","props","dispatch","useDispatch","ResponsiveContext","Consumer","Box","tag","direction","align","justify","background","pad","left","right","vertical","elevation","style","zIndex","Heading","level","margin","If","Button","icon","Menu","onClick","INITIAL_OPTIONS","nodes","color","border","highlight","shape","edges","useSelector","states","tableItems","bodyRef","useRef","useState","width","graphsDimensions","setGraphsDimensions","useLayoutEffect","current","setTimeout","window","addEventListener","offsetWidth","offsetHeight","graph","map","baseReturn","id","label","borderWidth","tableItem","from","to","value","options","full","flex","overflow","gap","Text","ref","key","uuidv4","title","bottom","inputs","setInput","onSubmit","e","newInput","preventDefault","toUpperCase","SidebarBox","List","data","TextInput","placeholder","onChange","target","primary","setState","newState","setS1","setI","setS2","newTableItem","Table","TableHeader","TableRow","TableCell","scope","TableBody","Select","option","executions","newExecution","Trash","disabled","RadialSelected","setInitialState","newInitialState","setSubmitting","newSubmitting","speed","setSpeed","handleSubmit","a","cacheCurrentState","entries","Promise","resolve","alert","Dashboard","RangeInput","max","min","step","Children","fill","States","Inputs","Execution","Start","Layer","FormClose","store","createStore","reducers","Grommet","theme","AppBar","horizontal","Sidebar","Graphs","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1dbda135.chunk.js","sourcesContent":["export default {\n  global: {\n    colors: {\n      brand: '#1B2430',\n      focus: \"#7159c1\"\n    },\n    font: {\n      family: 'Roboto',\n      size: '18px',\n      height: '20px',\n    },\n  },\n};\n","const INITIAL_STATE = {\n  open: false,\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch(action.type) {\n    case 'OPEN_SIDE_BAR':\n      return { ...state, open: action.payload };\n    case 'CLOSE_SIDE_BAR':\n      return { ...state, open: action.payload };\n    default:\n      return state;\n  }\n};\n","const INITIAL_STATE = {\n  list: [],\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch(action.type) {\n    case 'ADD_STATE':\n      if (!state.list.includes(action.payload))\n        return { ...state, list: [...state.list, action.payload ] };\n      return state;\n    case 'CLEAR_STATE':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n","const INITIAL_STATE = {\n  list: [],\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch(action.type) {\n    case 'ADD_INPUT':\n      if (!state.list.includes(action.payload))\n        return { ...state, list: [...state.list, action.payload ] };\n      return state;\n    case 'CLEAR_INPUT':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n","const INITIAL_STATE = {\n  items: [],\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch(action.type) {\n    case 'ADD_TABLE':\n      const invalidTableItem = state.items.find((item) => {\n        const existStateAndInput = item.s1 === action.payload.s1 && item.i === action.payload.i;\n        if (existStateAndInput)\n          return true;\n        if (existStateAndInput && item.s2 === action.payload.s2)\n          return true\n        return false;\n      });\n      if (!Boolean(invalidTableItem))\n        return { ...state, items: [...state.items, action.payload ] };\n      return state;\n    case 'CLEAR_TABLE':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n","const INITIAL_STATE = {\n  list: [],\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch(action.type) {\n    case 'ADD_EXECUTION':\n      return { ...state, list: [...state.list, action.payload ] };\n    case 'REMOVE_EXECUTION':\n      const list = state.list.filter((item, index) => action.payload !== index);\n      return { ...state, list }\n    case 'CLEAR_EXECUTION':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n","const INITIAL_STATE = {\n  submitting: false,\n  initialState: undefined,\n  beforeState: undefined,\n  currentState: undefined,\n  lastInput: undefined,\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch(action.type) {\n    case 'SET_INITIAL_STATE':\n      return {\n        ...state,\n        initialState: action.payload,\n        currentState: action.payload,\n        lastInput: undefined\n      };\n    case 'SET_CURRENT_STATE':\n      return { ...state, currentState: action.payload };\n    case 'SET_BEFORE_STATE':\n      return { ...state, beforeState: action.payload };\n    case 'SET_CURRENT_INPUT':\n      return { ...state, lastInput: action.payload };\n    case 'CLEAR_START':\n      return INITIAL_STATE;\n    case 'SET_SUBMITTING':\n      return { ...state, submitting: action.payload };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\n\nimport sidebarReducer from '../Components/Containers/Sidebar/reducers';\nimport stateReducer from '../Components/Containers/States/reducers';\nimport inputReducer from '../Components/Containers/Inputs/reducers';\nimport tableReducer from '../Components/Containers/Table/reducers';\nimport executionReducer from '../Components/Containers/Execution/reducers';\nimport startReducer from '../Components/Containers/Start/reducers';\n\nconst rootReducer = combineReducers({\n  sidebar: sidebarReducer,\n  state: stateReducer,\n  input: inputReducer,\n  table: tableReducer,\n  execution: executionReducer,\n  start: startReducer,\n});\n\nexport default rootReducer;\n","export default ({ test, children, notTest = true }) => {\n  if(!notTest)\n    return children\n  if(test)\n    return children;\n  return false;\n}\n","import React from 'react';\n\nimport {useDispatch} from 'react-redux';\n\nimport {handleOpenSidebar} from './Containers/Sidebar/actions';\n\nimport {Box, Heading, Button, ResponsiveContext} from 'grommet';\n\nimport {Menu} from 'grommet-icons';\n\nimport If from './Common/If';\n\nexport default (props) => {\n  const dispatch = useDispatch();\n\n  return (\n    <ResponsiveContext.Consumer>\n      {(size) => (\n        <Box\n          tag='header'\n          direction='row'\n          align='center'\n          justify='between'\n          background='brand'\n          pad={{ left: 'medium', right: 'small', vertical: 'small' }}\n          elevation='medium'\n          style={{ zIndex: '1' }}\n          {...props}\n        >\n          <Heading level='3' margin='none'>Finite Automaton</Heading>\n          <If test={size === 'small'}>\n            <Button\n              icon={<Menu />}\n              onClick={() => dispatch(handleOpenSidebar())}\n            />\n          </If>\n        </Box>\n      )}\n    </ResponsiveContext.Consumer>\n  );\n}\n","export const handleOpenSidebar = () => {\n  return { type: 'OPEN_SIDE_BAR', payload: true };\n};\n\nexport const handleCloseSidebar = () => {\n  return { type: 'CLOSE_SIDE_BAR', payload: false };\n};\n","import React, { useState, useLayoutEffect, useRef } from \"react\";\n\nimport { useSelector } from 'react-redux';\n\nimport { Box, Text } from 'grommet';\n\nimport Graph from \"react-graph-vis\";\n\nimport { v4 as uuidv4 } from 'uuid'\n\nconst INITIAL_OPTIONS = {\n  nodes: {\n    font: {\n      size: 25,\n    },\n    color: {\n      border: '#1B2430',\n      background: '#fff',\n      highlight: {\n        border: '#7159c1',\n        background: '#fff'\n      }\n    },\n    shape: 'circle'\n  },\n  edges: {\n  },\n};\n\nexport default () => {\n  const start = useSelector(({ start }) => start);\n  const states = useSelector(({ state }) => state.list);\n  const tableItems = useSelector(({ table }) => table.items);\n\n  const bodyRef = useRef(null);\n  const [graphsDimensions, setGraphsDimensions] = useState({\n    width: '600px',\n    height: '600px'\n  });\n\n  useLayoutEffect(() => {\n    if (bodyRef.current) {\n      setTimeout(() => {\n        window.addEventListener('resize', () => {\n          setGraphsDimensions({\n            width: `${bodyRef.current.offsetWidth}px`,\n            height: `${bodyRef.current.offsetHeight}px`,\n          })\n        })\n      }, 100);\n    }\n  }, [bodyRef]);\n\n  const nodes = states.map((state) => {\n    const baseReturn = { id: state, label: state };\n    if (start.currentState === state)\n      return { ...baseReturn, color: { border: '#7159c1', }, borderWidth: 3 };\n    if (start.initialState === state)\n      return { ...baseReturn, borderWidth: 3 };\n    return baseReturn;\n  });\n\n  const edges = tableItems.map((tableItem) => {\n    const baseReturn = { from: tableItem.s1, to: tableItem.s2, label: tableItem.i };\n    if (\n      start.lastInput\n      && start.lastInput.value === tableItem.i\n      && start.currentState === tableItem.s2\n      && start.beforeState === tableItem.s1\n    )\n      return { ...baseReturn, width: 3 };\n    return baseReturn;\n  });\n\n  const graph = {\n    nodes,\n    edges,\n  };\n\n  const options = {\n    ...INITIAL_OPTIONS,\n    height: graphsDimensions.height,\n    width: graphsDimensions.width,\n  };\n\n  const lastInput = (start.lastInput)\n    ? start.lastInput.value\n    : null;\n\n  return (\n    <Box full flex overflow=\"hidden\">\n      <Box pad=\"small\" gap=\"small\" background='light-2'>\n        <Text size=\"large\">\n          Current State: { start.currentState }\n        </Text>\n        <Text size=\"large\">\n          Last Input: { lastInput }\n        </Text>\n      </Box>\n      <Box flex ref={bodyRef}>\n        <Graph key={uuidv4()} graph={graph} options={options} />\n      </Box>\n    </Box>\n  );\n}\n","import React from 'react';\n\nimport { Box, Text } from 'grommet';\n\nimport If from './If';\n\nexport default ({ children, title }) => {\n  return (\n    <Box flex=\"grow\" margin={{ bottom: 'medium' }} gap=\"medium\">\n      <If test={title}>\n        <Text size=\"xlarge\">{ title }</Text>\n      </If>\n      { children }\n    </Box>\n  )\n}\n","import React, { useState } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { addInput } from './actions';\n\nimport { List, TextInput, Button } from 'grommet';\n\nimport SidebarBox from '../../Common/SidebarBox';\n\nexport default () => {\n  const inputs = useSelector((state) => state.input.list);\n  const dispatch = useDispatch();\n  const [input, setInput] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setInput('');\n    dispatch(addInput(input))\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <SidebarBox title=\"Inputs\">\n        <List\n          data={inputs}\n        />\n        <TextInput\n          placeholder=\"Input\"\n          value={input}\n          onChange={({ target }) => setInput(target.value)}\n        />\n        <Button\n          type=\"submit\"\n          label=\"+\"\n          primary\n        />\n      </SidebarBox>\n    </form>\n  );\n}\n","export const addInput = (newInput) => {\n  if (newInput !== '')\n    return { type: 'ADD_INPUT', payload: newInput.toUpperCase() };\n  return { type: null }\n};\n\nexport const clearInput = () => {\n  return { type: 'CLEAR_INPUT' };\n}\n","import React, { useState } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { addState } from './actions';\n\nimport { List, TextInput, Button } from 'grommet';\n\nimport SidebarBox from '../../Common/SidebarBox';\n\nexport default () => {\n  const states = useSelector((state) => state.state.list);\n  const dispatch = useDispatch();\n  const [state, setState] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setState('');\n    dispatch(addState(state))\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <SidebarBox title=\"States\">\n        <List\n          data={states}\n        />\n        <TextInput\n          placeholder=\"State\"\n          value={state}\n          onChange={({ target }) => setState(target.value)}\n        />\n        <Button\n          type=\"submit\"\n          label=\"+\"\n          primary\n        />\n      </SidebarBox>\n    </form>\n  );\n}\n","export const addState = (newState) => {\n  if (newState !== '')\n    return { type: 'ADD_STATE', payload: newState.toUpperCase() };\n  return { type: null }\n};\n\nexport const clearState = () => {\n  return { type: 'CLEAR_STATE' };\n}\n","import React, { useState } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { addTableItem } from './actions';\n\nimport {\n  Table, TableHeader, TableCell, TableBody, TableRow,\n  Select, Button\n} from 'grommet';\n\nimport SidebarBox from '../../Common/SidebarBox';\n\nexport default () => {\n  const dispatch = useDispatch();\n  const tableItems = useSelector((state) => state.table.items);\n  const states = useSelector((state) => state.state.list);\n  const inputs = useSelector((state) => state.input.list);\n  const [s1, setS1] = useState('');\n  const [i, setI] = useState('');\n  const [s2, setS2] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addTableItem({ s1, i, s2 }));\n    setS1('');\n    setI('');\n    setS2('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <SidebarBox title=\"Table\">\n        <Table>\n          <TableHeader>\n            <TableRow>\n              <TableCell scope=\"col\" border=\"bottom\">\n                S1\n            </TableCell>\n              <TableCell scope=\"col\" border=\"bottom\">\n                Input\n            </TableCell>\n              <TableCell scope=\"col\" border=\"bottom\">\n                S2\n            </TableCell>\n            </TableRow>\n          </TableHeader>\n          <TableBody>\n            {tableItems.map((item, index) => (\n              <TableRow key={index}>\n                <TableCell scope=\"row\">\n                  {item.s1}\n              </TableCell>\n                <TableCell scope=\"row\">\n                  {item.i}\n              </TableCell>\n                <TableCell scope=\"row\">\n                  {item.s2}\n              </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <Select\n          options={states}\n          placeholder=\"S1\"\n          value={s1}\n          onChange={({ option }) => setS1(option)}\n        />\n        <Select\n          options={inputs}\n          placeholder=\"Input\"\n          value={i}\n          onChange={({ option }) => setI(option)}\n        />\n        <Select\n          options={states}\n          placeholder=\"S2\"\n          value={s2}\n          onChange={({ option }) => setS2(option)}\n        />\n        <Button type=\"submit\" label=\"+\" primary />\n      </SidebarBox>\n    </form>\n  );\n}\n","export const addTableItem = (newTableItem) => {\n  if (\n    newTableItem.s1 !== ''\n    && newTableItem.i !== ''\n    && newTableItem.s2 !== ''\n  )\n    return { type: 'ADD_TABLE', payload: newTableItem };\n  return { type: null }\n};\n\nexport const clearTable = () => {\n  return { type: 'CLEAR_TABLE' };\n}\n","import React, { useState } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { addExecution, removeExecution } from './actions';\n\nimport { Box, List, Select, Button } from 'grommet';\n\nimport { RadialSelected, Trash } from 'grommet-icons';\n\nimport SidebarBox from '../../Common/SidebarBox';\n\nexport default () => {\n  const inputs = useSelector(({ input }) => input.list);\n  const executions = useSelector(({ execution }) => execution.list);\n  const start = useSelector(({ start }) => start);\n  const dispatch = useDispatch();\n  const [input, setInput] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addExecution(input));\n    setInput('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <SidebarBox title=\"Execution\">\n        <List\n          data={executions}\n          action={(item, index) => (\n            <Button\n              key={index}\n              icon={<Trash />}\n              onClick={() => dispatch(removeExecution(index))}\n              disabled={start.submitting}\n            />\n          )}\n        >\n          {(item, index) => {\n            const baseReturn = (\n              <Box direction=\"row\" gap=\"small\">\n                <RadialSelected key={index} />\n                {item}\n              </Box>\n            );\n            if (start.lastInput === undefined && index === 0)\n              return baseReturn\n            if (start.lastInput && start.lastInput.index === index)\n              return baseReturn\n            return item;\n          }}\n        </List>\n        <Select\n          options={inputs}\n          placeholder=\"Input\"\n          value={input}\n          onChange={({ option }) => setInput(option)}\n        />\n        <Button type=\"submit\" label=\"+\" primary />\n      </SidebarBox>\n    </form>\n  );\n}\n","export const addExecution = (newExecution) => {\n  if (newExecution !== '')\n    return { type: 'ADD_EXECUTION', payload: newExecution.toUpperCase() };\n  return { type: null }\n};\n\nexport const removeExecution = (toRemoveIndex) => {\n  return { type: 'REMOVE_EXECUTION', payload: toRemoveIndex };\n}\n\nexport const clearExecution = () => {\n  return { type: 'CLEAR_EXECUTION' };\n}\n","export const setInitialState = (newInitialState) => {\n  if (newInitialState !== '')\n    return { type: 'SET_INITIAL_STATE', payload: newInitialState };\n  return { type: null };\n};\n\nexport const setCurrentState = (newCurrentState) => {\n  return { type: 'SET_CURRENT_STATE', payload: newCurrentState };\n}\n\nexport const setBeforeState = (newBeforeState) => {\n  return { type: 'SET_BEFORE_STATE', payload: newBeforeState };\n}\n\nexport const setLastInput = (newLastInputIndex, newLastInputValue) => {\n  return {\n    type: 'SET_CURRENT_INPUT',\n    payload: { index: newLastInputIndex, value: newLastInputValue }\n  };\n}\n\nexport const setSubmitting = (newSubmitting) => {\n  return { type: 'SET_SUBMITTING', payload: newSubmitting };\n}\n\nexport const clearStart = () => {\n  return { type: 'CLEAR_START' };\n}\n","import React, { useState } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport {\n  setInitialState, setCurrentState, setBeforeState,\n  setLastInput, setSubmitting, clearStart\n} from './actions';\n\nimport { handleCloseSidebar } from '../Sidebar/actions';\n\nimport { clearState } from '../States/actions';\n\nimport { clearInput } from '../Inputs/actions';\n\nimport { clearTable } from '../Table/actions';\n\nimport { clearExecution } from '../Execution/actions';\n\nimport { Select, Button, RangeInput, Box } from 'grommet';\n\nimport { Dashboard } from \"grommet-icons\";\n\nimport SidebarBox from '../../Common/SidebarBox';\n\nexport default () => {\n  const dispatch = useDispatch();\n  const start = useSelector(({ start }) => start);\n  const states = useSelector(({ state }) => state.list);\n  const executions = useSelector(({ execution }) => execution.list);\n  const tableItems = useSelector(({ table }) => table.items);\n  const [speed, setSpeed] = useState(3);\n\n  const sleep = () => new Promise((resolve) => setTimeout(resolve, (9 - speed) * 1000));\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (start.initialState === undefined)\n      return;\n    dispatch(handleCloseSidebar());\n    dispatch(setSubmitting(true));\n    dispatch(setInitialState(start.initialState));\n    let cacheCurrentState = start.initialState;\n    for (const [index, execution] of executions.entries()) {\n      if (index !== 0)\n        await sleep();\n      const currentState = cacheCurrentState;\n      const tableItem = tableItems.find((item) => (\n        item.s1 === currentState && item.i === execution\n      ));\n      if (!tableItem) {\n        alert('STATE NOT FOUND');\n        break;\n      }\n      dispatch(setBeforeState(cacheCurrentState));\n      cacheCurrentState = tableItem.s2;\n      dispatch(setCurrentState(cacheCurrentState));\n      dispatch(setLastInput(index, execution));\n    }\n    dispatch(setSubmitting(false));\n  };\n\n  const handleClear = () => {\n    dispatch(clearState());\n    dispatch(clearInput());\n    dispatch(clearTable());\n    dispatch(clearExecution());\n    dispatch(clearStart());\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <SidebarBox title=\"Start\">\n        <Select\n          options={states}\n          placeholder=\"Initial State\"\n          value={start.initialState}\n          onChange={({ option }) => dispatch(setInitialState(option))}\n        />\n        <Box direction=\"row\" gap=\"small\">\n          <Dashboard />\n          <RangeInput\n            value={speed}\n            onChange={({ target }) => setSpeed(target.value)}\n            max={8}\n            min={1}\n            step={1}\n          />\n        </Box>\n        <Button type=\"submit\" label=\"Run\" primary disabled={start.submitting} />\n        <Button label=\"Clear\" onClick={handleClear} disabled={start.submitting} />\n      </SidebarBox>\n    </form>\n  );\n}\n","import React from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { handleCloseSidebar } from './actions';\n\nimport {\n  Box,\n  Button,\n  Layer,\n  ResponsiveContext,\n} from 'grommet';\n\nimport { FormClose } from 'grommet-icons';\n\nimport If from '../../Common/If';\nimport Inputs from '../Inputs';\nimport States from '../States';\nimport Table from '../Table';\nimport Execution from '../Execution';\nimport Start from '../Start';\n\nconst Children = () => {\n  return (\n    <Box fill pad=\"large\" overflow=\"auto\">\n      <States />\n      <Inputs />\n      <Table />\n      <Execution />\n      <Start />\n    </Box>\n  );\n}\n\nexport default () => {\n  const open = useSelector((state) => state.sidebar.open);\n  const dispatch = useDispatch();\n\n  return (\n    <ResponsiveContext.Consumer>\n      {(size) => (\n        <>\n          <If test={size !== 'small'}>\n            <Box\n              flex\n              background='light-2'\n              align='center'\n              justify='center'\n              width={{ max: '350px' }}\n            >\n              <Children />\n            </Box>\n          </If>\n          <If test={open && size === 'small'}>\n            <Layer>\n              <Box\n                background='light-2'\n                tag='header'\n                justify='end'\n                align='center'\n                direction='row'\n              >\n                <Button\n                  icon={<FormClose />}\n                  onClick={() => dispatch(handleCloseSidebar())}\n                />\n              </Box>\n              <Box\n                fill\n                background='light-2'\n                align='center'\n                justify='center'\n              >\n                <Children />\n              </Box>\n            </Layer>\n          </If>\n        </>\n      )}\n    </ResponsiveContext.Consumer>\n  );\n};\n","import React from 'react';\n\nimport { createStore } from 'redux';\n\nimport { Provider } from 'react-redux';\n\nimport {\n  Grommet,\n  Box,\n} from 'grommet';\n\nimport theme from './theme';\nimport reducers from './reducers';\n\nimport AppBar from '../Components/AppBar';\nimport Graphs from '../Components/Graphs';\nimport Sidebar from '../Components/Containers/Sidebar';\n\nconst store = createStore(reducers);\n\nexport default () => {\n  return (\n    <Provider store={store}>\n      <Grommet theme={theme} full>\n        <Box fill>\n          <AppBar />\n          <Box direction='row' flex overflow={{ horizontal: 'hidden' }}>\n            <Sidebar />\n            <Graphs />\n          </Box>\n        </Box>\n      </Grommet>\n    </Provider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Main/Index.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["Main/theme.js","redux/reducers/sidebar.js","redux/reducers/states.js","redux/reducers/inputs.js","redux/reducers/table.js","redux/reducers/start.js","redux/reducers/index.js","Components/Common/If.jsx","Components/AppBar.jsx","redux/actions/sidebar.js","Components/ResultMessage.jsx","Components/Graphs.jsx","Components/Common/SidebarBox.jsx","Components/Containers/Inputs.jsx","redux/actions/inputs.js","Components/Containers/States.jsx","redux/actions/states.js","Components/Containers/Table.jsx","redux/actions/table.js","redux/actions/start.js","Components/Containers/Start.jsx","Components/Containers/Sidebar.jsx","Main/Index.jsx","serviceWorker.js","index.js"],"names":["global","colors","brand","focus","font","family","size","height","INITIAL_STATE","open","list","items","submitting","initialState","undefined","finalState","executions","resultMessage","beforeState","currentState","lastInput","rootReducer","combineReducers","sidebar","state","action","type","payload","includes","input","table","invalidTableItem","find","item","existStateAndInput","s1","i","s2","Boolean","start","test","children","notTest","props","dispatch","useDispatch","ResponsiveContext","Consumer","Box","tag","direction","align","justify","background","pad","left","right","vertical","elevation","style","zIndex","Heading","level","margin","If","Button","icon","Menu","onClick","useSelector","value","gap","getBg","Text","INITIAL_OPTIONS","nodes","color","border","highlight","shape","edges","states","tableItems","bodyRef","useRef","useState","width","graphsDimensions","setGraphsDimensions","useLayoutEffect","current","resizeBox","offsetWidth","offsetHeight","window","addEventListener","setTimeout","graph","map","baseReturn","id","label","borderWidth","tableItem","from","to","options","full","flex","overflow","ResultMessage","ref","key","uuidv4","title","bottom","inputs","setInput","onSubmit","e","newInput","preventDefault","charAt","toUpperCase","SidebarBox","List","data","TextInput","placeholder","onChange","target","maxLength","primary","setState","newState","setS1","setI","setS2","newTableItem","Table","TableHeader","TableRow","TableCell","scope","TableBody","index","Select","option","setInitialState","newInitialState","setResultMessage","newResultMessage","setSubmitting","newSubmitting","speed","setSpeed","invalidLastState","invalidFirstExecution","length","invalidLastExecution","handleSubmit","a","cacheCurrentState","entries","execution","Promise","resolve","newFinalState","join","split","Dashboard","RangeInput","max","min","step","disabled","Children","fill","States","Inputs","Start","Layer","FormClose","store","createStore","reducers","Grommet","theme","AppBar","horizontal","Sidebar","Graphs","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e23a82f6.chunk.js","sourcesContent":["export default {\n  global: {\n    colors: {\n      brand: '#1B2430',\n      focus: \"#7159c1\"\n    },\n    font: {\n      family: 'Roboto',\n      size: '18px',\n      height: '20px',\n    },\n  },\n};\n","const INITIAL_STATE = {\n  open: false,\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch(action.type) {\n    case 'OPEN_SIDE_BAR':\n      return { ...state, open: action.payload };\n    case 'CLOSE_SIDE_BAR':\n      return { ...state, open: action.payload };\n    default:\n      return state;\n  }\n};\n","const INITIAL_STATE = {\n  list: [],\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch(action.type) {\n    case 'ADD_STATE':\n      if (!state.list.includes(action.payload))\n        return { ...state, list: [...state.list, action.payload ] };\n      return state;\n    case 'CLEAR_STATE':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n","const INITIAL_STATE = {\n  list: [],\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch(action.type) {\n    case 'ADD_INPUT':\n      if (!state.list.includes(action.payload))\n        return { ...state, list: [...state.list, action.payload ] };\n      return state;\n    case 'CLEAR_INPUT':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n","const INITIAL_STATE = {\n  items: [],\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch(action.type) {\n    case 'ADD_TABLE':\n      const invalidTableItem = state.items.find((item) => {\n        const existStateAndInput = item.s1 === action.payload.s1 && item.i === action.payload.i;\n        if (existStateAndInput)\n          return true;\n        if (existStateAndInput && item.s2 === action.payload.s2)\n          return true\n        return false;\n      });\n      if (!Boolean(invalidTableItem))\n        return { ...state, items: [...state.items, action.payload ] };\n      return state;\n    case 'CLEAR_TABLE':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n","const INITIAL_STATE = {\n  submitting: false,\n  initialState: undefined,\n  finalState: undefined,\n  executions: [],\n  resultMessage: null,\n  beforeState: undefined,\n  currentState: undefined,\n  lastInput: undefined,\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch(action.type) {\n    case 'SET_INITIAL_STATE':\n      return {\n        ...state,\n        initialState: action.payload,\n        currentState: action.payload,\n        lastInput: undefined\n      };\n    case 'SET_FINAL_STATE':\n      return {\n        ...state,\n        finalState: action.payload,\n        lastInput: undefined\n      };\n    case 'SET_EXECUTIONS':\n      return { ...state, executions: action.payload };\n    case 'SET_RESULT_MESSAGE':\n      return { ...state, resultMessage: action.payload };\n    case 'SET_CURRENT_STATE':\n      return { ...state, currentState: action.payload };\n    case 'SET_BEFORE_STATE':\n      return { ...state, beforeState: action.payload };\n    case 'SET_CURRENT_INPUT':\n      return { ...state, lastInput: action.payload };\n    case 'CLEAR_START':\n      return INITIAL_STATE;\n    case 'SET_SUBMITTING':\n      return { ...state, submitting: action.payload };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\n\nimport sidebarReducer from './sidebar';\nimport stateReducer from './states';\nimport inputReducer from './inputs';\nimport tableReducer from './table';\nimport startReducer from './start';\n\nconst rootReducer = combineReducers({\n  sidebar: sidebarReducer,\n  state: stateReducer,\n  input: inputReducer,\n  table: tableReducer,\n  start: startReducer,\n});\n\nexport default rootReducer;\n","export default ({ test, children, notTest = true }) => {\n  if(!notTest)\n    return children\n  if(test)\n    return children;\n  return false;\n}\n","import React from 'react';\n\nimport {useDispatch} from 'react-redux';\n\nimport {handleOpenSidebar} from '../redux/actions/sidebar';\n\nimport {Box, Heading, Button, ResponsiveContext} from 'grommet';\n\nimport {Menu} from 'grommet-icons';\n\nimport If from './Common/If';\n\nexport default (props) => {\n  const dispatch = useDispatch();\n\n  return (\n    <ResponsiveContext.Consumer>\n      {(size) => (\n        <Box\n          tag='header'\n          direction='row'\n          align='center'\n          justify='between'\n          background='brand'\n          pad={{ left: 'medium', right: 'small', vertical: 'small' }}\n          elevation='medium'\n          style={{ zIndex: '1' }}\n          {...props}\n        >\n          <Heading level='3' margin='none'>Finite Automaton</Heading>\n          <If test={size === 'small'}>\n            <Button\n              icon={<Menu />}\n              onClick={() => dispatch(handleOpenSidebar())}\n            />\n          </If>\n        </Box>\n      )}\n    </ResponsiveContext.Consumer>\n  );\n}\n","export const handleOpenSidebar = () => {\n  return { type: 'OPEN_SIDE_BAR', payload: true };\n};\n\nexport const handleCloseSidebar = () => {\n  return { type: 'CLOSE_SIDE_BAR', payload: false };\n};\n","import React from 'react';\n\nimport { useSelector } from 'react-redux';\n\nimport {Box, Text} from 'grommet';\n\nimport If from './Common/If';\n\nexport default () => {\n  const { type, value } = useSelector(({ start }) => start.resultMessage) || {};\n\n  const getBg = () => {\n    switch(type) {\n      case 'success':\n        return 'status-ok';\n      case 'error':\n        return 'status-critical'\n      default:\n        return 'light-2';\n    }\n  }\n\n  return (\n    <If test={value}>\n        <Box pad=\"small\" gap=\"small\" background={getBg()}>\n          <Text size=\"large\">\n            {value}\n          </Text>\n        </Box>\n      </If>\n  );\n};\n","import React, { useState, useLayoutEffect, useRef } from \"react\";\n\nimport { useSelector } from 'react-redux';\n\nimport { Box, Text } from 'grommet';\n\nimport Graph from \"react-graph-vis\";\n\nimport { v4 as uuidv4 } from 'uuid'\n\nimport ResultMessage from './ResultMessage';\n\nconst INITIAL_OPTIONS = {\n  nodes: {\n    font: {\n      size: 25,\n    },\n    color: {\n      border: '#1B2430',\n      background: '#fff',\n      highlight: {\n        border: '#7159c1',\n        background: '#fff'\n      }\n    },\n    shape: 'circle'\n  },\n  edges: {\n  },\n};\n\nexport default () => {\n  const start = useSelector(({ start }) => start);\n  const states = useSelector(({ state }) => state.list);\n  const tableItems = useSelector(({ table }) => table.items);\n\n  const bodyRef = useRef(null);\n  const [graphsDimensions, setGraphsDimensions] = useState({\n    width: '600px',\n    height: '600px'\n  });\n\n  useLayoutEffect(() => {\n    if (bodyRef.current) {\n      const resizeBox = () => {\n        setGraphsDimensions({\n          width: `${bodyRef.current.offsetWidth}px`,\n          height: `${bodyRef.current.offsetHeight}px`,\n        })\n      }\n\n      window.addEventListener('resize', resizeBox);\n      setTimeout(resizeBox, 100);\n    }\n  }, [bodyRef]);\n\n  const nodes = states.map((state) => {\n    const baseReturn = { id: state, label: state };\n    if (start.currentState === state)\n      return { ...baseReturn, color: { border: '#7159c1', }, borderWidth: 3 };\n    if (start.initialState === state)\n      return { ...baseReturn, borderWidth: 3 };\n    if (start.finalState === state)\n      return { ...baseReturn, color: { border: '#f00' }, borderWidth: 3 };\n    return baseReturn;\n  });\n\n  const edges = tableItems.map((tableItem) => {\n    const baseReturn = { from: tableItem.s1, to: tableItem.s2, label: tableItem.i };\n    if (\n      start.lastInput\n      && start.lastInput.value === tableItem.i\n      && start.currentState === tableItem.s2\n      && start.beforeState === tableItem.s1\n    )\n      return { ...baseReturn, width: 3 };\n    return baseReturn;\n  });\n\n  const graph = {\n    nodes,\n    edges,\n  };\n\n  const options = {\n    ...INITIAL_OPTIONS,\n    height: graphsDimensions.height,\n    width: graphsDimensions.width,\n  };\n\n  const lastInput = (start.lastInput)\n    ? start.lastInput.value\n    : null;\n\n  return (\n    <Box full flex overflow=\"hidden\">\n      <Box pad=\"small\" gap=\"small\" background='light-2'>\n        <Text size=\"large\">\n          Current State: {start.currentState}\n        </Text>\n        <Text size=\"large\">\n          Last Input: {lastInput}\n        </Text>\n      </Box>\n      <ResultMessage />\n      <Box flex ref={bodyRef}>\n        <Graph key={uuidv4()} graph={graph} options={options} />\n      </Box>\n    </Box>\n  );\n}\n","import React from 'react';\n\nimport { Box, Text } from 'grommet';\n\nimport If from './If';\n\nexport default ({ children, title }) => {\n  return (\n    <Box flex=\"grow\" margin={{ bottom: 'medium' }} gap=\"medium\">\n      <If test={title}>\n        <Text size=\"xlarge\">{ title }</Text>\n      </If>\n      { children }\n    </Box>\n  )\n}\n","import React, { useState } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { addInput } from '../../redux/actions/inputs';\n\nimport { List, TextInput, Button } from 'grommet';\n\nimport SidebarBox from '../Common/SidebarBox';\n\nexport default () => {\n  const inputs = useSelector((state) => state.input.list);\n  const dispatch = useDispatch();\n  const [input, setInput] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setInput('');\n    dispatch(addInput(input))\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <SidebarBox title=\"Inputs\">\n        <List\n          data={inputs}\n        />\n        <TextInput\n          placeholder=\"Input\"\n          value={input}\n          onChange={({ target }) => setInput(target.value)}\n          maxLength=\"1\"\n        />\n        <Button\n          type=\"submit\"\n          label=\"+\"\n          primary\n        />\n      </SidebarBox>\n    </form>\n  );\n}\n","export const addInput = (newInput) => {\n  if (newInput !== '')\n    return { type: 'ADD_INPUT', payload: newInput.charAt(0).toUpperCase() };\n  return { type: null }\n};\n\nexport const clearInput = () => {\n  return { type: 'CLEAR_INPUT' };\n}\n","import React, { useState } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { addState } from '../../redux/actions/states';\n\nimport { List, TextInput, Button } from 'grommet';\n\nimport SidebarBox from '../Common/SidebarBox';\n\nexport default () => {\n  const states = useSelector((state) => state.state.list);\n  const dispatch = useDispatch();\n  const [state, setState] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setState('');\n    dispatch(addState(state))\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <SidebarBox title=\"States\">\n        <List\n          data={states}\n        />\n        <TextInput\n          placeholder=\"State\"\n          value={state}\n          onChange={({ target }) => setState(target.value)}\n          maxLength=\"1\"\n        />\n        <Button\n          type=\"submit\"\n          label=\"+\"\n          primary\n        />\n      </SidebarBox>\n    </form>\n  );\n}\n","export const addState = (newState) => {\n  if (newState !== '')\n    return { type: 'ADD_STATE', payload: newState.charAt(0).toUpperCase() };\n  return { type: null }\n};\n\nexport const clearState = () => {\n  return { type: 'CLEAR_STATE' };\n}\n","import React, { useState } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { addTableItem } from '../../redux/actions/table';\n\nimport {\n  Table, TableHeader, TableCell, TableBody, TableRow,\n  Select, Button\n} from 'grommet';\n\nimport SidebarBox from '../Common/SidebarBox';\n\nexport default () => {\n  const dispatch = useDispatch();\n  const tableItems = useSelector((state) => state.table.items);\n  const states = useSelector((state) => state.state.list);\n  const inputs = useSelector((state) => state.input.list);\n  const [s1, setS1] = useState('');\n  const [i, setI] = useState('');\n  const [s2, setS2] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addTableItem({ s1, i, s2 }));\n    setS1('');\n    setI('');\n    setS2('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <SidebarBox title=\"Table\">\n        <Table>\n          <TableHeader>\n            <TableRow>\n              <TableCell scope=\"col\" border=\"bottom\">\n                S1\n            </TableCell>\n              <TableCell scope=\"col\" border=\"bottom\">\n                Input\n            </TableCell>\n              <TableCell scope=\"col\" border=\"bottom\">\n                S2\n            </TableCell>\n            </TableRow>\n          </TableHeader>\n          <TableBody>\n            {tableItems.map((item, index) => (\n              <TableRow key={index}>\n                <TableCell scope=\"row\">\n                  {item.s1}\n              </TableCell>\n                <TableCell scope=\"row\">\n                  {item.i}\n              </TableCell>\n                <TableCell scope=\"row\">\n                  {item.s2}\n              </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <Select\n          options={states}\n          placeholder=\"S1\"\n          value={s1}\n          onChange={({ option }) => setS1(option)}\n        />\n        <Select\n          options={inputs}\n          placeholder=\"Input\"\n          value={i}\n          onChange={({ option }) => setI(option)}\n        />\n        <Select\n          options={states}\n          placeholder=\"S2\"\n          value={s2}\n          onChange={({ option }) => setS2(option)}\n        />\n        <Button type=\"submit\" label=\"+\" primary />\n      </SidebarBox>\n    </form>\n  );\n}\n","export const addTableItem = (newTableItem) => {\n  if (\n    newTableItem.s1 !== ''\n    && newTableItem.i !== ''\n    && newTableItem.s2 !== ''\n  )\n    return { type: 'ADD_TABLE', payload: newTableItem };\n  return { type: null }\n};\n\nexport const clearTable = () => {\n  return { type: 'CLEAR_TABLE' };\n}\n","export const setInitialState = (newInitialState) => {\n  if (newInitialState !== '')\n    return { type: 'SET_INITIAL_STATE', payload: newInitialState };\n  return { type: null };\n};\n\nexport const setFinalState = (newFinalState) => {\n  if (newFinalState !== '')\n    return { type: 'SET_FINAL_STATE', payload: newFinalState };\n  return { type: null };\n};\n\nexport const setExecutions = (newExecutions) => {\n  return { type: 'SET_EXECUTIONS', payload: newExecutions.split('') };\n};\n\nexport const setResultMessage = (newResultMessage) => {\n  if (newResultMessage === null)\n    return { type: 'SET_RESULT_MESSAGE', payload: newResultMessage };\n  if (newResultMessage.value && newResultMessage.type)\n    return { type: 'SET_RESULT_MESSAGE', payload: newResultMessage };\n  return { type: null };\n}\n\nexport const setCurrentState = (newCurrentState) => {\n  return { type: 'SET_CURRENT_STATE', payload: newCurrentState };\n}\n\nexport const setBeforeState = (newBeforeState) => {\n  return { type: 'SET_BEFORE_STATE', payload: newBeforeState };\n}\n\nexport const setLastInput = (newLastInputIndex, newLastInputValue) => {\n  return {\n    type: 'SET_CURRENT_INPUT',\n    payload: { index: newLastInputIndex, value: newLastInputValue }\n  };\n}\n\nexport const setSubmitting = (newSubmitting) => {\n  return { type: 'SET_SUBMITTING', payload: newSubmitting };\n}\n\nexport const clearStart = () => {\n  return { type: 'CLEAR_START' };\n}\n","import React, { useState } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport {\n  setInitialState, setFinalState,\n  setExecutions, setResultMessage,\n  setCurrentState, setBeforeState,\n  setLastInput, setSubmitting, clearStart\n} from '../../redux/actions/start';\n\nimport { handleCloseSidebar } from '../../redux/actions/sidebar';\n\nimport { clearState } from '../../redux/actions/states';\n\nimport { clearInput } from '../../redux/actions/inputs';\n\nimport { clearTable } from '../../redux/actions/table';\n\nimport { Select, TextInput, Button, RangeInput, Box } from 'grommet';\n\nimport { Dashboard } from \"grommet-icons\";\n\nimport SidebarBox from '../Common/SidebarBox';\n\nexport default () => {\n  const dispatch = useDispatch();\n  const start = useSelector(({ start }) => start);\n  const states = useSelector(({ state }) => state.list);\n  const tableItems = useSelector(({ table }) => table.items);\n  const [speed, setSpeed] = useState(3);\n\n  const sleep = () => new Promise((resolve) => setTimeout(resolve, (9 - speed) * 1000));\n\n  const invalidLastState = (tableItem, index) => {\n    const invalidFirstExecution = (\n      start.executions.length === 1\n      && tableItem.s2 !== start.finalState\n    );\n\n    const invalidLastExecution = (\n      index === start.executions.length - 1\n      && tableItem.s2 !== start.finalState\n    );\n\n    return invalidFirstExecution || invalidLastExecution;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (\n      start.initialState === undefined\n      || start.finalState === undefined\n    ) return;\n\n    dispatch(handleCloseSidebar());\n    dispatch(setSubmitting(true));\n    dispatch(setInitialState(start.initialState));\n    dispatch(setResultMessage(null));\n\n    let cacheCurrentState = start.initialState;\n\n    for (const [index, execution] of start.executions.entries()) {\n      if (index !== 0)\n        await sleep();\n\n      const currentState = cacheCurrentState;\n\n      const tableItem = tableItems.find((item) => (\n        item.s1 === currentState && item.i === execution\n      ));\n\n      if (!tableItem) {\n        dispatch(setResultMessage({\n          value: 'INVALID EXECUTION INPUT',\n          type: 'error'\n        }));\n        break;\n      }\n\n      dispatch(setBeforeState(cacheCurrentState));\n      cacheCurrentState = tableItem.s2;\n      dispatch(setCurrentState(cacheCurrentState));\n      dispatch(setLastInput(index, execution));\n\n      if (invalidLastState(tableItem, index)) {\n        dispatch(setResultMessage({\n          value: 'LAST STATE NOT FOUND',\n          type: 'error'\n        }));\n        break;\n      }\n\n      if (index === start.executions.length - 1) {\n        dispatch(setResultMessage({\n          value: 'SUCCESS!',\n          type: 'success'\n        }));\n      }\n    }\n    dispatch(setSubmitting(false));\n  };\n\n  const handleClear = () => {\n    dispatch(clearState());\n    dispatch(clearInput());\n    dispatch(clearTable());\n    dispatch(clearStart());\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <SidebarBox title=\"Start\">\n        <Select\n          options={states}\n          placeholder=\"Initial State\"\n          value={start.initialState}\n          onChange={({ option }) => dispatch(setInitialState(option))}\n        />\n        <Select\n          options={states}\n          placeholder=\"Final State\"\n          value={start.finalState}\n          onChange={({ option }) => dispatch(setFinalState(option))}\n        />\n        <TextInput\n          placeholder=\"Excution Inputs\"\n          value={start.executions.join('')}\n          onChange={({ target }) => dispatch(setExecutions(target.value))}\n        />\n        <Box direction=\"row\" gap=\"small\">\n          <Dashboard />\n          <RangeInput\n            value={speed}\n            onChange={({ target }) => setSpeed(target.value)}\n            max={8}\n            min={1}\n            step={1}\n          />\n        </Box>\n        <Button type=\"submit\" label=\"Run\" primary disabled={start.submitting} />\n        <Button label=\"Clear\" onClick={handleClear} disabled={start.submitting} />\n      </SidebarBox>\n    </form>\n  );\n}\n","import React from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { handleCloseSidebar } from '../../redux/actions/sidebar';\n\nimport {\n  Box,\n  Button,\n  Layer,\n  ResponsiveContext,\n} from 'grommet';\n\nimport { FormClose } from 'grommet-icons';\n\nimport If from '../Common/If';\nimport Inputs from './Inputs';\nimport States from './States';\nimport Table from './Table';\nimport Start from './Start';\n\nconst Children = () => {\n  return (\n    <Box fill pad=\"large\" overflow=\"auto\">\n      <States />\n      <Inputs />\n      <Table />\n      <Start />\n    </Box>\n  );\n}\n\nexport default () => {\n  const open = useSelector((state) => state.sidebar.open);\n  const dispatch = useDispatch();\n\n  return (\n    <ResponsiveContext.Consumer>\n      {(size) => (\n        <>\n          <If test={size !== 'small'}>\n            <Box\n              flex\n              background='light-2'\n              align='center'\n              justify='center'\n              width={{ max: '350px' }}\n            >\n              <Children />\n            </Box>\n          </If>\n          <If test={open && size === 'small'}>\n            <Layer>\n              <Box\n                background='light-2'\n                tag='header'\n                justify='end'\n                align='center'\n                direction='row'\n              >\n                <Button\n                  icon={<FormClose />}\n                  onClick={() => dispatch(handleCloseSidebar())}\n                />\n              </Box>\n              <Box\n                fill\n                background='light-2'\n                align='center'\n                justify='center'\n              >\n                <Children />\n              </Box>\n            </Layer>\n          </If>\n        </>\n      )}\n    </ResponsiveContext.Consumer>\n  );\n};\n","import React from 'react';\n\nimport { createStore } from 'redux';\n\nimport { Provider } from 'react-redux';\n\nimport {\n  Grommet,\n  Box,\n} from 'grommet';\n\nimport theme from './theme';\nimport reducers from '../redux/reducers';\n\nimport AppBar from '../Components/AppBar';\nimport Graphs from '../Components/Graphs';\nimport Sidebar from '../Components/Containers/Sidebar';\n\nconst store = createStore(reducers);\n\nexport default () => {\n  return (\n    <Provider store={store}>\n      <Grommet theme={theme} full>\n        <Box fill>\n          <AppBar />\n          <Box direction='row' flex overflow={{ horizontal: 'hidden' }}>\n            <Sidebar />\n            <Graphs />\n          </Box>\n        </Box>\n      </Grommet>\n    </Provider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Main/Index.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
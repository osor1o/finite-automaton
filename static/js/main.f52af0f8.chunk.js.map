{"version":3,"sources":["Main/theme.js","Components/Containers/Sidebar/reducers.js","Components/Containers/States/reducers.js","Components/Containers/Inputs/reducers.js","Components/Containers/Table/reducers.js","Components/Containers/Execution/reducers.js","Main/reducers.js","Components/Common/If.jsx","Components/AppBar.jsx","Components/Containers/Sidebar/actions.js","Components/Containers/Graphs/index.jsx","Components/Common/SidebarBox.jsx","Components/Containers/Inputs/index.jsx","Components/Containers/Inputs/actions.js","Components/Containers/States/index.jsx","Components/Containers/States/actions.js","Components/Containers/Table/index.jsx","Components/Containers/Table/actions.js","Components/Containers/Execution/index.jsx","Components/Containers/Execution/actions.js","Components/Containers/Start/index.jsx","Components/Containers/Sidebar/index.jsx","Main/Index.jsx","serviceWorker.js","index.js"],"names":["global","colors","brand","focus","font","family","size","height","INITIAL_STATE","open","list","items","s1","i","s2","rootReducer","combineReducers","sidebar","state","action","type","payload","includes","input","table","execution","test","children","notTest","props","dispatch","useDispatch","ResponsiveContext","Consumer","Box","tag","direction","align","justify","background","pad","left","right","vertical","elevation","style","zIndex","Heading","level","margin","If","Button","icon","Menu","onClick","width","states","useSelector","tableItems","graph","nodes","map","id","label","edges","tableItem","from","to","options","color","border","highlight","shape","key","uuidv4","title","flex","bottom","gap","Text","inputs","useState","setInput","onSubmit","e","newInput","preventDefault","toUpperCase","SidebarBox","List","data","TextInput","placeholder","value","onChange","target","primary","setState","newState","setS1","setI","setS2","newTableItem","Table","TableHeader","TableRow","TableCell","scope","TableBody","item","index","Select","option","executions","newExecution","initialState","setInitialState","console","log","Children","fill","overflow","States","Inputs","Execution","Start","max","Layer","FormClose","store","createStore","reducers","bodyRef","useRef","graphsDimensions","setGraphsDimensions","useLayoutEffect","current","offsetWidth","offsetHeight","Grommet","theme","full","AppBar","horizontal","Sidebar","ref","Graphs","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f52af0f8.chunk.js","sourcesContent":["export default {\n  global: {\n    colors: {\n      brand: '#1B2430',\n      focus: \"#7159c1\"\n    },\n    font: {\n      family: 'Roboto',\n      size: '18px',\n      height: '20px',\n    },\n  },\n};\n","const INITIAL_STATE = {\n  open: false,\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch(action.type) {\n    case 'OPEN_SIDE_BAR':\n      return { ...state, open: action.payload };\n    case 'CLOSE_SIDE_BAR':\n      return { ...state, open: action.payload };\n    default:\n      return state;\n  }\n};\n","const INITIAL_STATE = {\n  list: ['A', 'B', 'C'],\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch(action.type) {\n    case 'ADD_STATE':\n      if (!state.list.includes(action.payload))\n        return { ...state, list: [...state.list, action.payload ] };\n      return state;\n    default:\n      return state;\n  }\n};\n","const INITIAL_STATE = {\n  list: ['0', '1'],\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch(action.type) {\n    case 'ADD_INPUT':\n      if (!state.list.includes(action.payload))\n        return { ...state, list: [...state.list, action.payload ] };\n      return state;\n    default:\n      return state;\n  }\n};\n","const INITIAL_STATE = {\n  items: [\n    { s1: 'A', i: '0', s2: 'A' },\n    { s1: 'B', i: '1', s2: 'A' },\n    { s1: 'A', i: '1', s2: 'B' },\n  ],\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch(action.type) {\n    case 'ADD_TABLE':\n      return { ...state, items: [...state.items, action.payload ] };\n    default:\n      return state;\n  }\n};\n","const INITIAL_STATE = {\n  list: [],\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch(action.type) {\n    case 'ADD_EXECUTION':\n      return { ...state, list: [...state.list, action.payload ] };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\n\nimport sidebarReducer from '../Components/Containers/Sidebar/reducers';\nimport stateReducer from '../Components/Containers/States/reducers';\nimport inputReducer from '../Components/Containers/Inputs/reducers';\nimport tableReducer from '../Components/Containers/Table/reducers';\nimport executionReducer from '../Components/Containers/Execution/reducers';\n\nconst rootReducer = combineReducers({\n  sidebar: sidebarReducer,\n  state: stateReducer,\n  input: inputReducer,\n  table: tableReducer,\n  execution: executionReducer,\n});\n\nexport default rootReducer;\n","export default ({ test, children, notTest = true }) => {\n  if(!notTest)\n    return children\n  if(test)\n    return children;\n  return false;\n}\n","import React from 'react';\n\nimport {useDispatch} from 'react-redux';\n\nimport {handleOpenSidebar} from './Containers/Sidebar/actions';\n\nimport {Box, Heading, Button, ResponsiveContext} from 'grommet';\n\nimport {Menu} from 'grommet-icons';\n\nimport If from './Common/If';\n\nexport default (props) => {\n  const dispatch = useDispatch();\n\n  return (\n    <ResponsiveContext.Consumer>\n      {(size) => (\n        <Box\n          tag='header'\n          direction='row'\n          align='center'\n          justify='between'\n          background='brand'\n          pad={{ left: 'medium', right: 'small', vertical: 'small' }}\n          elevation='medium'\n          style={{ zIndex: '1' }}\n          {...props}\n        >\n          <Heading level='3' margin='none'>Finite Automaton</Heading>\n          <If test={size === 'small'}>\n            <Button\n              icon={<Menu />}\n              onClick={() => dispatch(handleOpenSidebar())}\n            />\n          </If>\n        </Box>\n      )}\n    </ResponsiveContext.Consumer>\n  );\n}\n","export const handleOpenSidebar = () => {\n  return { type: 'OPEN_SIDE_BAR', payload: true };\n};\n\nexport const handleCloseSidebar = () => {\n  return { type: 'CLOSE_SIDE_BAR', payload: false };\n};\n","import React from \"react\";\n\nimport { useSelector } from 'react-redux';\n\nimport { Box } from 'grommet';\n\nimport Graph from \"react-graph-vis\";\n\nimport { v4 as uuidv4 } from 'uuid'\n\n// const graph = {\n//   nodes: [\n//     { id: 1, label: \"Node 1\", selected: true, color: { border: '#7159c1', }, borderWidth: 2 },\n//     { id: 2, label: \"Node 2\", },\n//     { id: 3, label: \"Node 3\", },\n//     { id: 4, label: \"Node 4\", },\n//   ],\n//   edges: [\n//     // { from: 1, to: 2, label: '123', width: 2 },\n//     // { from: 1, to: 1, label: '123' },\n//     // { from: 1, to: 3 },\n//     // { from: 2, to: 4 },\n//   ]\n// };\n\nexport default (props) => {\n  const { height, width } = props;\n  const states = useSelector(({ state }) => state.list);\n  const tableItems = useSelector(({ table }) => table.items);\n\n  const graph = {\n    nodes: states.map((state) => ({ id: state, label: state })),\n    edges: tableItems.map((tableItem) => ({ from: tableItem.s1, to: tableItem.s2, label: tableItem.i })),\n  };\n\n  const options = {\n    nodes: {\n      font: {\n        size: 25,\n      },\n      color: {\n        border: '#1B2430',\n        background: '#fff',\n        highlight: {\n          border: '#7159c1',\n          background: '#fff'\n        }\n      },\n      shape: 'circle'\n    },\n    edges: {\n    },\n    height,\n    width,\n  };\n\n  return (\n    <Box>\n      <Graph key={uuidv4()} graph={graph} options={options} />\n    </Box>\n  );\n}\n","import React from 'react';\n\nimport { Box, Text } from 'grommet';\n\nimport If from './If';\n\nexport default ({ children, title }) => {\n  return (\n    <Box flex=\"grow\" margin={{ bottom: 'medium' }} gap=\"medium\">\n      <If test={title}>\n        <Text size=\"xlarge\">{ title }</Text>\n      </If>\n      { children }\n    </Box>\n  )\n}\n","import React, { useState } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { addInput } from './actions';\n\nimport { List, TextInput, Button } from 'grommet';\n\nimport SidebarBox from '../../Common/SidebarBox';\n\nexport default () => {\n  const inputs = useSelector((state) => state.input.list);\n  const dispatch = useDispatch();\n  const [input, setInput] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setInput('');\n    dispatch(addInput(input))\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <SidebarBox title=\"Inputs\">\n        <List\n          data={inputs}\n        />\n        <TextInput\n          placeholder=\"Input\"\n          value={input}\n          onChange={({ target }) => setInput(target.value)}\n        />\n        <Button\n          type=\"submit\"\n          label=\"+\"\n          primary\n        />\n      </SidebarBox>\n    </form>\n  );\n}\n","export const addInput = (newInput) => {\n  if (newInput !== '')\n    return { type: 'ADD_INPUT', payload: newInput.toUpperCase() };\n  return { type: null }\n};\n","import React, { useState } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { addState } from './actions';\n\nimport { List, TextInput, Button } from 'grommet';\n\nimport SidebarBox from '../../Common/SidebarBox';\n\nexport default () => {\n  const states = useSelector((state) => state.state.list);\n  const dispatch = useDispatch();\n  const [state, setState] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setState('');\n    dispatch(addState(state))\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <SidebarBox title=\"States\">\n        <List\n          data={states}\n        />\n        <TextInput\n          placeholder=\"State\"\n          value={state}\n          onChange={({ target }) => setState(target.value)}\n        />\n        <Button\n          type=\"submit\"\n          label=\"+\"\n          primary\n        />\n      </SidebarBox>\n    </form>\n  );\n}\n","export const addState = (newState) => {\n  if (newState !== '')\n    return { type: 'ADD_STATE', payload: newState.toUpperCase() };\n  return { type: null }\n};\n","import React, { useState } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { addTableItem } from './actions';\n\nimport {\n  Table, TableHeader, TableCell, TableBody, TableRow,\n  Select, Button\n} from 'grommet';\n\nimport SidebarBox from '../../Common/SidebarBox';\n\nexport default () => {\n  const dispatch = useDispatch();\n  const tableItems = useSelector((state) => state.table.items);\n  const states = useSelector((state) => state.state.list);\n  const inputs = useSelector((state) => state.input.list);\n  const [s1, setS1] = useState('');\n  const [i, setI] = useState('');\n  const [s2, setS2] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addTableItem({ s1, i, s2 }));\n    setS1('');\n    setI('');\n    setS2('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <SidebarBox title=\"Table\">\n        <Table>\n          <TableHeader>\n            <TableRow>\n              <TableCell scope=\"col\" border=\"bottom\">\n                S1\n            </TableCell>\n              <TableCell scope=\"col\" border=\"bottom\">\n                Input\n            </TableCell>\n              <TableCell scope=\"col\" border=\"bottom\">\n                S2\n            </TableCell>\n            </TableRow>\n          </TableHeader>\n          <TableBody>\n            {tableItems.map((item, index) => (\n              <TableRow key={index}>\n                <TableCell scope=\"row\">\n                  {item.s1}\n              </TableCell>\n                <TableCell scope=\"row\">\n                  {item.i}\n              </TableCell>\n                <TableCell scope=\"row\">\n                  {item.s2}\n              </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n        <Select\n          options={states}\n          placeholder=\"S1\"\n          value={s1}\n          onChange={({ option }) => setS1(option)}\n        />\n        <Select\n          options={inputs}\n          placeholder=\"Input\"\n          value={i}\n          onChange={({ option }) => setI(option)}\n        />\n        <Select\n          options={states}\n          placeholder=\"S2\"\n          value={s2}\n          onChange={({ option }) => setS2(option)}\n        />\n        <Button type=\"submit\" label=\"+\" primary />\n      </SidebarBox>\n    </form>\n  );\n}\n","export const addTableItem = (newTableItem) => {\n  if (\n    newTableItem.s1 !== ''\n    && newTableItem.i !== ''\n    && newTableItem.s2 !== ''\n  )\n    return { type: 'ADD_TABLE', payload: newTableItem };\n  return { type: null }\n};\n","import React, { useState } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { addExecution } from './actions';\n\nimport { List, Select, Button } from 'grommet';\n\nimport SidebarBox from '../../Common/SidebarBox';\n\nexport default () => {\n  const inputs = useSelector((state) => state.input.list);\n  const executions = useSelector((state) => state.execution.list);\n  const dispatch = useDispatch();\n  const [input, setInput] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addExecution(input));\n    setInput('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <SidebarBox title=\"Execution\">\n        <List\n          data={executions}\n        />\n        <Select\n          options={inputs}\n          placeholder=\"Input\"\n          value={input}\n          onChange={({ option }) => setInput(option)}\n        />\n        <Button type=\"submit\" label=\"+\" primary />\n      </SidebarBox>\n    </form>\n  );\n}\n","export const addExecution = (newExecution) => {\n  if (newExecution !== '')\n    return { type: 'ADD_EXECUTION', payload: newExecution.toUpperCase() };\n  return { type: null }\n};\n","import React, { useState } from 'react';\n\nimport { useSelector } from 'react-redux';\n\nimport { Select, Button } from 'grommet';\n\nimport SidebarBox from '../../Common/SidebarBox';\n\nexport default () => {\n  const states = useSelector(({ state }) => state.list);\n  const [initialState, setInitialState] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(initialState);\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <SidebarBox title=\"Start\">\n        <Select\n          options={states}\n          placeholder=\"Initial State\"\n          value={initialState}\n          onChange={({ option }) => setInitialState(option)}\n        />\n        <Button type=\"submit\" label=\"Run\" primary />\n        <Button label=\"Clear\" />\n      </SidebarBox>\n    </form>\n  );\n}\n","import React from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { handleCloseSidebar } from './actions';\n\nimport {\n  Box,\n  Button,\n  Layer,\n  ResponsiveContext,\n} from 'grommet';\n\nimport { FormClose } from 'grommet-icons';\n\nimport If from '../../Common/If';\nimport Inputs from '../Inputs';\nimport States from '../States';\nimport Table from '../Table';\nimport Execution from '../Execution';\nimport Start from '../Start';\n\nconst Children = () => {\n  return (\n    <Box fill pad=\"large\" overflow=\"auto\">\n      <States />\n      <Inputs />\n      <Table />\n      <Execution />\n      <Start />\n    </Box>\n  );\n}\n\nexport default () => {\n  const open = useSelector((state) => state.sidebar.open);\n  const dispatch = useDispatch();\n\n  return (\n    <ResponsiveContext.Consumer>\n      {(size) => (\n        <>\n          <If test={size !== 'small'}>\n            <Box\n              flex\n              background='light-2'\n              align='center'\n              justify='center'\n              width={{ max: '350px' }}\n            >\n              <Children />\n            </Box>\n          </If>\n          <If test={open && size === 'small'}>\n            <Layer>\n              <Box\n                background='light-2'\n                tag='header'\n                justify='end'\n                align='center'\n                direction='row'\n              >\n                <Button\n                  icon={<FormClose />}\n                  onClick={() => dispatch(handleCloseSidebar())}\n                />\n              </Box>\n              <Box\n                fill\n                background='light-2'\n                align='center'\n                justify='center'\n              >\n                <Children />\n              </Box>\n            </Layer>\n          </If>\n        </>\n      )}\n    </ResponsiveContext.Consumer>\n  );\n};\n","import React, { useState, useRef, useLayoutEffect } from 'react';\n\nimport { createStore } from 'redux';\n\nimport { Provider } from 'react-redux';\n\nimport {\n  Grommet,\n  Box,\n} from 'grommet';\n\nimport theme from './theme';\nimport reducers from './reducers';\n\nimport AppBar from '../Components/AppBar';\nimport Graphs from '../Components/Containers/Graphs';\nimport Sidebar from '../Components/Containers/Sidebar';\n\nconst store = createStore(reducers);\n\nexport default () => {\n  const bodyRef = useRef(null);\n  const [graphsDimensions, setGraphsDimensions] = useState({\n    width: '600px',\n    height: '600px'\n  });\n\n  useLayoutEffect(() => {\n    if (bodyRef.current) {\n      setGraphsDimensions({\n        width: `${bodyRef.current.offsetWidth}px`,\n        height: `${bodyRef.current.offsetHeight}px`,\n      })\n    }\n  }, [bodyRef])\n\n  return (\n    <Provider store={store}>\n      <Grommet theme={theme} full>\n        <Box fill>\n          <AppBar />\n          <Box direction='row' flex overflow={{ horizontal: 'hidden' }}>\n            <Sidebar />\n            <Box\n              flex\n              align='center'\n              justify='center'\n              ref={bodyRef}\n              overflow='hidden'\n            >\n              <Graphs\n                width={graphsDimensions.width}\n                height={graphsDimensions.height}\n              />\n            </Box>\n          </Box>\n        </Box>\n      </Grommet>\n    </Provider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Main/Index.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}